#!/usr/bin/env bash

# clean environment, then make every file in the dir an argument,
# then save the argument count to $pkgs
set --
# kiss, arch, debian, void, gentoo
for i in '/var/db/kiss/installed/*'  '/var/lib/pacman/local/[0-9a-z]*' \
'/var/lib/dpkg/info/*.list'  '/var/db/xbps/.*'  '/var/db/pkg/*/*'; do
	set -- $i
	[ $# -gt 1 ] && break
done
pkgs=${###0}

os=`cat /etc/os-release | grep PRETTY_NAME | sed 's/\"//g' | sed 's/.*=//g'`
ram=$(echo "$((`cat /proc/meminfo | grep MemTotal | awk '{print $2}'`/1024))")
ram_used=$(echo $((`cat /proc/meminfo | grep MemAvailable | awk '{print $2}'`/1024)))
ram_used=$(echo $((ram-ram_used)))
uptime=`echo $(uptime | awk '{print $3}' | sed 's/,//g' | sed 's/\:/ /g')`
username=`whoami`

kernel=$(cat /proc/sys/kernel/osrelease)
kernel=${kernel%%-*}
    
# Get wm from xinitrc
while read -r line; do
    [ "${line#exec }" = "$line" ] || wm="${line#exec }"
done < "$HOME/.xinitrc"

cpu_temp=$(sensors | awk '/CPU Temp/{gsub(/+/, "", $0); gsub(/.0/,"", $0); print $3}')
video_temp=$(sensors | awk '/temp1/{gsub(/+/, "", $0); gsub(/.0/,"", $0); print $2}')

uptime_hours="${uptime%??}"
uptime_minutes="${uptime#?}"

yellow=$(echo -en '\033[00;33m')
magenta=$(echo -en '\033[00;35m')
grey=$(echo -en '\033[01;30m')
white=$(echo -en '\033[0m')
green=$(echo -en '\033[01;37m')
  
cat << EOF

  ${white}$os
${magenta}--------------user        $username
              ${magenta}wm          ${white}${wm}
     ${white}.${yellow}~${white}.      ${magenta}kernel      ${white}$kernel
     ${grey}/${yellow}V${grey}\      ${magenta}sensors     ${magenta}proc ${white}${cpu_temp} ${magenta}video ${white}${video_temp}
    ${grey}/${green}/ \\${grey}\     ${magenta}packages    ${white}${pkgs}
   ${grey}/${green}(   )${grey}\    ${magenta}shell       ${white}${SHELL##*/}
    ${grey}^${green}\`${yellow}~${green}'${grey}^     ${magenta}ram         ${white}$ram_used ${magenta}of ${white}$ram ${magenta}MiB${white}
${magenta}--------------${magenta}uptime      ${white}$uptime_hours${magenta}hr${white}$uptime_minutes ${magenta}min
EOF
